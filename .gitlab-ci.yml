image: maven:latest

variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -s $CI_PROJECT_DIR/.m2/settings.xml"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

build:
  stage: build
  script:
    - echo mvn $MAVEN_CLI_OPTS clean test
    - mvn $MAVEN_CLI_OPTS help:effective-pom
    - mvn $MAVEN_CLI_OPTS dependency:tree
    - mvn $MAVEN_CLI_OPTS dependency:list-repositories
    - mvn $MAVEN_CLI_OPTS clean test
  except:
     variables:
        - $CI_COMMIT_MESSAGE =~ /^\[maven-release-plugin\] /


deploy snapshot:
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS deploy
  only:
    - work

release:
  stage: deploy
  script:
    - printenv
    # Install ssh-agent if not already installed, it is required by Docker.
    # (change apt-get to yum if you use a CentOS-based image)
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    
    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    
    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    
    # For Docker builds disable host key checking. Be aware that by adding that
    # you are susceptible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git checkout -B "$CI_BUILD_REF_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
    - git config --global -l
    - git remote set-url --push origin ssh://$SCM_URL/$CI_PROJECT_NAME
    - git remote -vv
    - mvn $MAVEN_CLI_OPTS release:prepare -B -DskipTests=true
    - mvn $MAVEN_CLI_OPTS release:perform -B -DskipTests=true
  only:
    - master
  except:
     variables:
        - $CI_COMMIT_MESSAGE =~ /^\[maven-release-plugin\] /

